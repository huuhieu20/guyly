import random
import io
from datetime import date

import streamlit as st
import pandas as pd

st.set_page_config(page_title="L√™n th·ª±c ƒë∆°n trong ng√†y", page_icon="üçΩÔ∏è", layout="centered")

# --------- DANH S√ÅCH M√ìN ƒÇN (R√öT G·ªåN, TI·∫æNG VI·ªÜT) ----------
BUA_SANG = ["X√¥i", "B√°nh m√¨", "Ph·ªü", "B√∫n", "Ch√°o"]
MON_MAN = ["Th·ªãt kho", "G√† chi√™n", "C√° kho", "T√¥m rim", "Tr·ª©ng chi√™n"]
RAU = ["Rau mu·ªëng x√†o", "Rau lang lu·ªôc", "C·∫£i th√¨a x√†o"]
CANH = ["Canh chua", "Canh rau ng√≥t", "Canh b√≠ ƒë·ªè"]
RAU_OR_CANH = ["(Rau) " + r for r in RAU] + ["(Canh) " + c for c in CANH]

# --------- H√ÄM H·ªñ TR·ª¢ ----------
def kiem_tra_quy_tac(manan, phu):
    """Tr·∫£ v·ªÅ danh s√°ch l·ªói n·∫øu vi ph·∫°m: manan ph·∫£i c√≥ 2 m√≥n; phu ph·∫£i c√≥ 1 m√≥n."""
    loi = []
    if len(manan) != 2:
        loi.append("C·∫ßn ch·ªçn ƒë√∫ng **2 m√≥n m·∫∑n**.")
    if len(phu) != 1:
        loi.append("C·∫ßn ch·ªçn ƒë√∫ng **1 m√≥n rau ho·∫∑c canh**.")
    return loi

def tao_dataframe(plan):
    rows = []
    for m in plan["sang"]:
        rows.append({"B·ªØa": "S√°ng", "M√≥n": m})
    for m in plan["trua_man"]:
        rows.append({"B·ªØa": "Tr∆∞a (m·∫∑n)", "M√≥n": m})
    for m in plan["trua_phu"]:
        rows.append({"B·ªØa": "Tr∆∞a (rau/canh)", "M√≥n": m})
    for m in plan["toi_man"]:
        rows.append({"B·ªØa": "T·ªëi (m·∫∑n)", "M√≥n": m})
    for m in plan["toi_phu"]:
        rows.append({"B·ªØa": "T·ªëi (rau/canh)", "M√≥n": m})
    return pd.DataFrame(rows)

def download_buttons(df):
    csv = df.to_csv(index=False, encoding="utf-8-sig")
    st.download_button("‚¨áÔ∏è T·∫£i CSV", data=csv, file_name=f"thuc_don_{date.today()}.csv", mime="text/csv")
    md = io.StringIO()
    md.write("# Th·ª±c ƒë∆°n trong ng√†y\n\n")
    for bua in ["S√°ng", "Tr∆∞a (m·∫∑n)", "Tr∆∞a (rau/canh)", "T·ªëi (m·∫∑n)", "T·ªëi (rau/canh)"]:
        items = df[df["B·ªØa"] == bua]["M√≥n"].tolist()
        md.write(f"**{bua}**: {', '.join(items) if items else '_(ch∆∞a ch·ªçn)_'}\n\n")
    st.download_button("‚¨áÔ∏è T·∫£i Markdown", data=md.getvalue(), file_name=f"thuc_don_{date.today()}.md", mime="text/markdown")

# --------- GIAO DI·ªÜN (FORM + MULTISELECT) ----------
st.title("üç≤ L√™n th·ª±c ƒë∆°n trong ng√†y")
st.caption("Quy t·∫Øc: B·ªØa tr∆∞a & b·ªØa t·ªëi = **2 m√≥n m·∫∑n** + **1 m√≥n rau ho·∫∑c canh**.")

with st.form("form_thuc_don"):
    st.subheader("B·ªØa s√°ng")
    sang = st.multiselect("Ch·ªçn m√≥n cho b·ªØa s√°ng (c√≥ th·ªÉ ch·ªçn nhi·ªÅu):", options=BUA_SANG, default=[])

    st.subheader("B·ªØa tr∆∞a")
    trua_man = st.multiselect("Ch·ªçn 2 m√≥n m·∫∑n (tr∆∞a):", options=MON_MAN, default=[])
    trua_phu = st.multiselect("Ch·ªçn 1 m√≥n rau ho·∫∑c canh (tr∆∞a):", options=RAU_OR_CANH, default=[])

    st.subheader("B·ªØa t·ªëi")
    toi_man = st.multiselect("Ch·ªçn 2 m√≥n m·∫∑n (t·ªëi):", options=MON_MAN, default=[])
    toi_phu = st.multiselect("Ch·ªçn 1 m√≥n rau ho·∫∑c canh (t·ªëi):", options=RAU_OR_CANH, default=[])

    col1, col2, col3 = st.columns([1,1,1])
    with col1:
        submit = st.form_submit_button("X√°c nh·∫≠n")
    with col2:
        if st.form_submit_button("G·ª£i √Ω nhanh"):
            # G·ª£i √Ω: random nh∆∞ng tu√¢n th·ªß quy t·∫Øc
            trua_man = random.sample(MON_MAN, 2)
            trua_phu = [random.choice(RAU_OR_CANH)]
            toi_man = random.sample(MON_MAN, 2)
            toi_phu = [random.choice(RAU_OR_CANH)]
            # l∆∞u t·∫°m v√†o session ƒë·ªÉ khi submit hi·ªán l√™n
            st.session_state["g_trua_man"] = trua_man
            st.session_state["g_trua_phu"] = trua_phu
            st.session_state["g_toi_man"] = toi_man
            st.session_state["g_toi_phu"] = toi_phu
            st.experimental_rerun()
    with col3:
        if st.form_submit_button("Xo√° ch·ªçn"):
            for k in ["sang","trua_man","trua_phu","toi_man","toi_phu"]:
                st.session_state[k] = []

# N·∫øu ng∆∞·ªùi d√πng v·ª´a b·∫•m "G·ª£i √Ω nhanh" ch√∫ng ta c√≥ d·ªØ li·ªáu trong session
if "g_trua_man" in st.session_state:
    trua_man = st.session_state.get("g_trua_man", trua_man)
    trua_phu = st.session_state.get("g_trua_phu", trua_phu)
    toi_man = st.session_state.get("g_toi_man", toi_man)
    toi_phu = st.session_state.get("g_toi_phu", toi_phu)

# Hi·ªán k·∫øt qu·∫£ khi nh·∫•n x√°c nh·∫≠n
if submit:
    loi_trua = kiem_tra_quy_tac(trua_man, trua_phu)
    loi_toi = kiem_tra_quy_tac(toi_man, toi_phu)
    if loi_trua or loi_toi:
        st.error("Th·ª±c ƒë∆°n ch∆∞a h·ª£p l·ªá:")
        for e in loi_trua + loi_toi:
            st.write("- " + e)
        st.info("Vui l√≤ng s·ª≠a ƒë·ªÉ ƒë√∫ng: **2 m√≥n m·∫∑n** v√† **1 m√≥n rau ho·∫∑c canh** cho c·∫£ tr∆∞a & t·ªëi.")
    else:
        st.success("‚úÖ Th·ª±c ƒë∆°n h·ª£p l·ªá")
        plan = {
            "sang": sang,
            "trua_man": trua_man,
            "trua_phu": trua_phu,
            "toi_man": toi_man,
            "toi_phu": toi_phu
        }
        df = tao_dataframe(plan)
        st.subheader("üìã T·ªïng h·ª£p th·ª±c ƒë∆°n")
        st.dataframe(df, use_container_width=True, hide_index=True)
        download_buttons(df)

# N·∫øu ch∆∞a submit, v·∫´n hi·ªÉn th·ªã t·ªïng quan d·ª±a tr√™n session ƒë·ªÉ ng∆∞·ªùi d√πng th·∫•y l·ª±a ch·ªçn
else:
    preview = {
        "sang": st.session_state.get("sang", []),
        "trua_man": st.session_state.get("trua_man", []),
        "trua_phu": st.session_state.get("trua_phu", []),
        "toi_man": st.session_state.get("toi_man", []),
        "toi_phu": st.session_state.get("toi_phu", []),
    }
    df_preview = tao_dataframe(preview)
    st.subheader("üìã Xem tr∆∞·ªõc (ch∆∞a x√°c nh·∫≠n)")
    st.dataframe(df_preview, use_container_width=True, hide_index=True)
